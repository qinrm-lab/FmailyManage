// <auto-generated />
using System;
using FamilyManage.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FmailyManage.Migrations
{
    [DbContext(typeof(TempleContext))]
    partial class TempleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FamilyManage.Data.AccountClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("UserStaus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PersonInfoId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FamilyManage.Data.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("FamilyManage.Data.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Money");
                });

            modelBuilder.Entity("FamilyManage.Data.KeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("KeyValues");
                });

            modelBuilder.Entity("FamilyManage.Data.NameClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NameClass");
                });

            modelBuilder.Entity("FamilyManage.Data.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountClassId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<int?>("FundId")
                        .HasColumnType("int");

                    b.Property<int>("Operating")
                        .HasColumnType("int");

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AccountClassId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FundId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("FamilyManage.Data.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<int?>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Generation")
                        .HasColumnType("int")
                        .HasComment("家族第几代");

                    b.Property<int>("NameId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalIDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FromId");

                    b.HasIndex("NameId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonalIDId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("FamilyManage.Data.Temple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TempleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TempleId");

                    b.ToTable("Temples");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridModule", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("i")
                        .HasColumnType("int");

                    b.Property<int>("j")
                        .HasColumnType("int");

                    b.Property<int>("stylesId")
                        .HasColumnType("int");

                    b.Property<bool>("view")
                        .HasColumnType("bit");

                    b.Property<string>("words")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ParentId");

                    b.HasIndex("stylesId");

                    b.ToTable("GridModules");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("nColumns")
                        .HasColumnType("int");

                    b.Property<int>("nRows")
                        .HasColumnType("int");

                    b.Property<string>("sLen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .IsUnique()
                        .HasFilter("[ParentId] IS NOT NULL");

                    b.ToTable("GridTables");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StyleListId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StyleListId");

                    b.ToTable("Style");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.StyleList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("StyleList");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreaterId")
                        .HasColumnType("int");

                    b.Property<Guid?>("GridTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JsonString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreaterId");

                    b.HasIndex("GridTableId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("FamilyManage.Data.AccountClass", b =>
                {
                    b.HasOne("FamilyManage.Data.AccountClass", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("FamilyManage.Data.Person", "PersonInfo")
                        .WithMany()
                        .HasForeignKey("PersonInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("PersonInfo");
                });

            modelBuilder.Entity("FamilyManage.Data.KeyValue", b =>
                {
                    b.HasOne("FamilyManage.Data.Person", null)
                        .WithMany("Contact")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("FamilyManage.Data.Operation", b =>
                {
                    b.HasOne("FamilyManage.Data.AccountClass", null)
                        .WithMany("Operations")
                        .HasForeignKey("AccountClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FamilyManage.Data.Family", null)
                        .WithMany("Operations")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FamilyManage.Data.Fund", null)
                        .WithMany("Operations")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FamilyManage.Data.AccountClass", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("FamilyManage.Data.Person", b =>
                {
                    b.HasOne("FamilyManage.Data.Family", "Family")
                        .WithMany("Persons")
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyManage.Data.Person", "From")
                        .WithMany("To")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FamilyManage.Data.NameClass", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyManage.Data.Person", null)
                        .WithMany("Partners")
                        .HasForeignKey("PersonId");

                    b.HasOne("FamilyManage.Data.KeyValue", "PersonalID")
                        .WithMany()
                        .HasForeignKey("PersonalIDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("From");

                    b.Navigation("Name");

                    b.Navigation("PersonalID");
                });

            modelBuilder.Entity("FamilyManage.Data.Temple", b =>
                {
                    b.HasOne("FamilyManage.Data.Temple", null)
                        .WithMany("Accounts")
                        .HasForeignKey("TempleId");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridModule", b =>
                {
                    b.HasOne("FamilyManage.Shared.Data.GridTable", "Parent")
                        .WithMany("ModulesList")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FamilyManage.Shared.Data.StyleList", "styles")
                        .WithMany()
                        .HasForeignKey("stylesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("styles");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridTable", b =>
                {
                    b.HasOne("FamilyManage.Shared.Data.GridModule", "father")
                        .WithOne("Child")
                        .HasForeignKey("FamilyManage.Shared.Data.GridTable", "ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("father");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.Style", b =>
                {
                    b.HasOne("FamilyManage.Shared.Data.StyleList", null)
                        .WithMany("Styles")
                        .HasForeignKey("StyleListId");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.Template", b =>
                {
                    b.HasOne("FamilyManage.Data.AccountClass", "Creater")
                        .WithMany()
                        .HasForeignKey("CreaterId");

                    b.HasOne("FamilyManage.Shared.Data.GridTable", "GridTable")
                        .WithMany()
                        .HasForeignKey("GridTableId");

                    b.Navigation("Creater");

                    b.Navigation("GridTable");
                });

            modelBuilder.Entity("FamilyManage.Data.AccountClass", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("FamilyManage.Data.Family", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("FamilyManage.Data.Fund", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("FamilyManage.Data.Person", b =>
                {
                    b.Navigation("Contact");

                    b.Navigation("Partners");

                    b.Navigation("To");
                });

            modelBuilder.Entity("FamilyManage.Data.Temple", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridModule", b =>
                {
                    b.Navigation("Child");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.GridTable", b =>
                {
                    b.Navigation("ModulesList");
                });

            modelBuilder.Entity("FamilyManage.Shared.Data.StyleList", b =>
                {
                    b.Navigation("Styles");
                });
#pragma warning restore 612, 618
        }
    }
}
